{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cheatsheets CN \u4e2d\u6587\u5f00\u53d1\u8005\u901f\u67e5\u8868\u3002 \u8bed\u8a00 GNU Bash Bash Go Go Python Python \u57fa\u7840\u8bbe\u65bd Docker Docker Kubernetes Kubernetes \u6570\u636e\u5e93 MySQL MySQL MongoDB MongoDB Redis Redis SQLite SQLite \u5de5\u5177 Git Git Apache Kafka Kafka tmux Tmux","title":"\u7b80\u4ecb"},{"location":"#cheatsheets-cn","text":"\u4e2d\u6587\u5f00\u53d1\u8005\u901f\u67e5\u8868\u3002","title":"Cheatsheets CN"},{"location":"#_1","text":"GNU Bash Bash Go Go Python Python","title":"\u8bed\u8a00"},{"location":"#_2","text":"Docker Docker Kubernetes Kubernetes","title":"\u57fa\u7840\u8bbe\u65bd"},{"location":"#_3","text":"MySQL MySQL MongoDB MongoDB Redis Redis SQLite SQLite","title":"\u6570\u636e\u5e93"},{"location":"#_4","text":"Git Git Apache Kafka Kafka tmux Tmux","title":"\u5de5\u5177"},{"location":"databases/mongodb/","text":"\u6570\u636e\u5e93 use DATABASE_NAME \u5207\u6362\u5230\u6307\u5b9a\u6570\u636e\u5e93\uff0c\u5982\u4e0d\u5b58\u5728\u5219\u65b0\u5efa db \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93 show dbs \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93 \u96c6\u5408 show collections \u67e5\u770b\u6240\u6709\u96c6\u5408 \u7528\u6237 use admin db.system.users.find().pretty() \u67e5\u770b\u6240\u6709\u7528\u6237 show users \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u4e0b\u6240\u6709\u7528\u6237 db.createUser({ user:\"USERNAME\", pwd:\"PASSWORD\", roles:[ {role:\"readWrite\", db:\"mydb\"}, ] }) \u521b\u5efa\u7528\u6237 db.grantRolesToUser( \"USERNAME\", [{role:\"readWrite\", db:\"mydb\"}] ) \u4fee\u6539\u7528\u6237\u6743\u9650 \u6587\u6863 \u5220 db.collection.remove({}) \u5220\u9664\u7b26\u5408\u6761\u4ef6\u7684\u6587\u6863 \u67e5 db.collection.count({}) \u67e5\u770b\u7b26\u5408\u6761\u4ef6\u6587\u6863\u7684\u6570\u76ee","title":"MongoDB"},{"location":"databases/mongodb/#_1","text":"use DATABASE_NAME \u5207\u6362\u5230\u6307\u5b9a\u6570\u636e\u5e93\uff0c\u5982\u4e0d\u5b58\u5728\u5219\u65b0\u5efa db \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93 show dbs \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93","title":"\u6570\u636e\u5e93"},{"location":"databases/mongodb/#_2","text":"show collections \u67e5\u770b\u6240\u6709\u96c6\u5408","title":"\u96c6\u5408"},{"location":"databases/mongodb/#_3","text":"use admin db.system.users.find().pretty() \u67e5\u770b\u6240\u6709\u7528\u6237 show users \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u4e0b\u6240\u6709\u7528\u6237 db.createUser({ user:\"USERNAME\", pwd:\"PASSWORD\", roles:[ {role:\"readWrite\", db:\"mydb\"}, ] }) \u521b\u5efa\u7528\u6237 db.grantRolesToUser( \"USERNAME\", [{role:\"readWrite\", db:\"mydb\"}] ) \u4fee\u6539\u7528\u6237\u6743\u9650","title":"\u7528\u6237"},{"location":"databases/mongodb/#_4","text":"","title":"\u6587\u6863"},{"location":"databases/mongodb/#_5","text":"db.collection.remove({}) \u5220\u9664\u7b26\u5408\u6761\u4ef6\u7684\u6587\u6863","title":"\u5220"},{"location":"databases/mongodb/#_6","text":"db.collection.count({}) \u67e5\u770b\u7b26\u5408\u6761\u4ef6\u6587\u6863\u7684\u6570\u76ee","title":"\u67e5"},{"location":"databases/mysql/","text":"\u6570\u636e\u5e93 SHOW DATABASES; \u663e\u793a\u6240\u6709\u6570\u636e\u5e93 DROP DATABASE db_name; \u5220\u9664\u6307\u5b9a\u6570\u636e\u5e93 \u7d22\u5f15 SHOW INDEX FROM table_name; \u67e5\u770b\u6307\u5b9a\u8868\u7684\u7d22\u5f15 SELECT SELECT DISTINCT column_name FROM table_name; \u4ece\u8868\u4e2d\u67e5\u8be2\u6307\u5b9a\u5217\u53bb\u91cd\u7ed3\u679c \u65e5\u671f SELECT DATEDIFF('1997-12-31 23:59:59', '1997-12-30'); | \u4e24\u4e2a\u65f6\u95f4\u76f8\u51cf\uff0c\u8fd4\u56de\u5929\u6570 | SELECT NOW(); | \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4 SELECT CURRENT_TIMESTAMP; | \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4 SELECT CURRENT_TIMESTAMP(); | \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4 SELECT CURDATE(); | \u8fd4\u56de\u5f53\u524d\u65e5\u671f SELECT DATE_ADD(NOW(), INTERVAL 1 DAY); | \u65e5\u671f\u52a0 1 \u5929","title":"MySQL"},{"location":"databases/mysql/#_1","text":"SHOW DATABASES; \u663e\u793a\u6240\u6709\u6570\u636e\u5e93 DROP DATABASE db_name; \u5220\u9664\u6307\u5b9a\u6570\u636e\u5e93","title":"\u6570\u636e\u5e93"},{"location":"databases/mysql/#_2","text":"SHOW INDEX FROM table_name; \u67e5\u770b\u6307\u5b9a\u8868\u7684\u7d22\u5f15","title":"\u7d22\u5f15"},{"location":"databases/mysql/#select","text":"SELECT DISTINCT column_name FROM table_name; \u4ece\u8868\u4e2d\u67e5\u8be2\u6307\u5b9a\u5217\u53bb\u91cd\u7ed3\u679c","title":"SELECT"},{"location":"databases/mysql/#_3","text":"SELECT DATEDIFF('1997-12-31 23:59:59', '1997-12-30'); | \u4e24\u4e2a\u65f6\u95f4\u76f8\u51cf\uff0c\u8fd4\u56de\u5929\u6570 | SELECT NOW(); | \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4 SELECT CURRENT_TIMESTAMP; | \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4 SELECT CURRENT_TIMESTAMP(); | \u8fd4\u56de\u5f53\u524d\u65e5\u671f\u3001\u65f6\u95f4 SELECT CURDATE(); | \u8fd4\u56de\u5f53\u524d\u65e5\u671f SELECT DATE_ADD(NOW(), INTERVAL 1 DAY); | \u65e5\u671f\u52a0 1 \u5929","title":"\u65e5\u671f"},{"location":"databases/redis/","text":"AUTH \"password\" \u8ba4\u8bc1\u5bc6\u7801 PING \u9a8c\u8bc1\u670d\u52a1 KEYS * \u663e\u793a\u6240\u6709 key LLEN key \u83b7\u53d6\u5217\u8868 key \u957f\u5ea6","title":"Redis"},{"location":"databases/sqlite/","text":"\u8bbe\u7f6e .header on \u8f93\u51fa\u65f6\u663e\u793a\u8868\u5934 .mode column \u8f93\u51fa\u65f6\u5bf9\u9f50\u5217","title":"SQLite"},{"location":"databases/sqlite/#_1","text":".header on \u8f93\u51fa\u65f6\u663e\u793a\u8868\u5934 .mode column \u8f93\u51fa\u65f6\u5bf9\u9f50\u5217","title":"\u8bbe\u7f6e"},{"location":"infrastructure/docker/","text":"docker tag IMAGE_ID REPOSITORY:TAG \u91cd\u547d\u540d\u955c\u50cf\u540d\u79f0\u548c tag docker stats \u5b9e\u65f6\u663e\u793a\u5bb9\u5668\u8d44\u6e90\u4f7f\u7528\u72b6\u51b5 docker stats $(docker ps --format={{.Names}}) \u5b9e\u65f6\u663e\u793a\u5bb9\u5668\u8d44\u6e90\u4f7f\u7528\u72b6\u51b5\uff08\u663e\u793a\u5bb9\u5668\u540d\uff09","title":"Docker"},{"location":"infrastructure/kubernetes/","text":"kubectl get pods -o wide \u67e5\u770b\u6240\u6709\u5bb9\u5668\u7ec4 kubectl describe pods POD_NAME \u67e5\u770b pod \u8be6\u60c5","title":"Kubernetes"},{"location":"languages/bash/","text":"Bash \u6267\u884c\u53c2\u6570 -e \u5728\u6709\u9519\u8bef\u65f6\u9000\u51fa -n \u8bfb\u4e00\u904d\u811a\u672c\u4e2d\u7684\u547d\u4ee4\u4f46\u4e0d\u6267\u884c\uff0c\u7528\u4e8e\u68c0\u67e5\u811a\u672c\u4e2d\u7684\u8bed\u6cd5\u9519\u8bef -v \u4e00\u8fb9\u6267\u884c\u811a\u672c\uff0c\u4e00\u8fb9\u5c06\u6267\u884c\u8fc7\u7684\u811a\u672c\u547d\u4ee4\u6253\u5370\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa -x \u63d0\u4f9b\u8ddf\u8e2a\u6267\u884c\u4fe1\u606f\uff0c\u5c06\u6267\u884c\u7684\u6bcf\u4e00\u6761\u547d\u4ee4\u548c\u7ed3\u679c\u4f9d\u6b21\u6253\u5370\u51fa\u6765 \u4ee3\u7801\u7247\u6bb5 cat FILENAME | while read line do echo \"LINE: ${line}\" done \u9010\u884c\u5904\u7406\u6587\u4ef6 cat FILENAME | expand -t 4 \u4ee5 tab \u957f\u5ea6\u4e3a 4 \u6253\u5370\u6587\u4ef6 \u5de5\u5177 seq -w 1 10 \u8f93\u51fa\u8fde\u7eed\u7b49\u5bbd\u6570\u5b57 echo XXX | column -t \u683c\u5f0f\u5316\u5bf9\u9f50\u8f93\u51fa","title":"Bash"},{"location":"languages/bash/#bash","text":"-e \u5728\u6709\u9519\u8bef\u65f6\u9000\u51fa -n \u8bfb\u4e00\u904d\u811a\u672c\u4e2d\u7684\u547d\u4ee4\u4f46\u4e0d\u6267\u884c\uff0c\u7528\u4e8e\u68c0\u67e5\u811a\u672c\u4e2d\u7684\u8bed\u6cd5\u9519\u8bef -v \u4e00\u8fb9\u6267\u884c\u811a\u672c\uff0c\u4e00\u8fb9\u5c06\u6267\u884c\u8fc7\u7684\u811a\u672c\u547d\u4ee4\u6253\u5370\u5230\u6807\u51c6\u9519\u8bef\u8f93\u51fa -x \u63d0\u4f9b\u8ddf\u8e2a\u6267\u884c\u4fe1\u606f\uff0c\u5c06\u6267\u884c\u7684\u6bcf\u4e00\u6761\u547d\u4ee4\u548c\u7ed3\u679c\u4f9d\u6b21\u6253\u5370\u51fa\u6765","title":"Bash \u6267\u884c\u53c2\u6570"},{"location":"languages/bash/#_1","text":"cat FILENAME | while read line do echo \"LINE: ${line}\" done \u9010\u884c\u5904\u7406\u6587\u4ef6 cat FILENAME | expand -t 4 \u4ee5 tab \u957f\u5ea6\u4e3a 4 \u6253\u5370\u6587\u4ef6","title":"\u4ee3\u7801\u7247\u6bb5"},{"location":"languages/bash/#_2","text":"seq -w 1 10 \u8f93\u51fa\u8fde\u7eed\u7b49\u5bbd\u6570\u5b57 echo XXX | column -t \u683c\u5f0f\u5316\u5bf9\u9f50\u8f93\u51fa","title":"\u5de5\u5177"},{"location":"languages/go/","text":"\u53d8\u91cf\u548c\u5e38\u91cf var msg string msg = \"Hello\" n \u53d8\u91cf\u58f0\u660e msg := \"Hello\" const Phi = 1.618 \u5e38\u91cf\u53ef\u4ee5\u662f character\uff0cstring\uff0cboolean \u6216\u6570\u503c\u3002 \u6570\u636e\u7c7b\u578b \u5b57\u7b26\u4e32 for i := 0; i < len(str); i++ { fmt.Println(str[i]) } \u904d\u5386\u5b57\u7b26\u4e32\u7684 byte (uinit8) for _, s := range str { fmt.Println(s) } \u904d\u5386\u5b57\u7b26\u4e32\u7684 rune (int32) Slice var s []type \u58f0\u660e\u4e00\u4e2a slice\uff0c\u4f46\u6ca1\u6709\u5206\u914d\u7a7a\u95f4\u3002\u6b64\u65f6 s \u7b49\u4e8e nil s := make([]type, length) \u4f7f\u7528 make() \u521b\u5efa slice\uff0c\u6307\u5b9a\u4e86 slice \u7684 length\uff08capacity \u4e3a\u53ef\u9009\u53c2\u6570\uff09 s := make([]type, length, capacity) s := []int{1, 2, 3} \u58f0\u660e\u4e00\u4e2a slice \u5e76\u521d\u59cb\u5316 s := arr[:] \u4ece\u6570\u7ec4 arr \u521d\u59cb\u5316 slice s := arr[2:4] s2 := s[2:4] \u4ece slice s \u521d\u59cb\u5316 slice s = append(s, 1) \u5411 slice s \u8ffd\u52a0\u4e00\u4e2a\u5143\u7d20 s = append(s, 1, 2) \u5411 slice s \u8ffd\u52a0\u4e24\u4e2a\u5143\u7d20 s = append(s, []int{1, 2, 3}...) \u8ffd\u52a0\u4e00\u4e2a slice\uff0cslice \u9700\u8981\u4f7f\u7528...\u8fd0\u7b97\u7b26 s = append([]int{1, 2, 3}, s...) \u5411 slice \u524d\u9762\u8ffd\u52a0\u5143\u7d20 for _, item := range s { fmt.Println(item) } \u904d\u5386 slice Map var m map[key_type]value_type \u58f0\u660e\u4e00\u4e2a map\uff0c\u4f46\u6ca1\u6709\u5206\u914d\u7a7a\u95f4\u3002\u6b64\u65f6 m \u7b49\u4e8e nil m := make(map[key_type]value_type) \u4f7f\u7528 make() \u521b\u5efa map m := map[string]int { \"item1\": 1, \"item2\": 2, } \u58f0\u660e\u4e00\u4e2amap\u5e76\u521d\u59cb\u5316 _, ok := m[\"key\"] \u5224\u65ad map \u4e2d key \u662f\u5426\u5b58\u5728\uff0cok \u4e3a true \u5219 key \u5b58\u5728\uff0c\u4e3a false \u5219 key \u4e0d\u5b58\u5728 delete(m, \"key\") \u5220\u9664 map \u4e2d\u7684\u5143\u7d20\u3002\u5982\u679c key \u4e0d\u5b58\u5728\uff0c\u4e0d\u64cd\u4f5c\u4e5f\u4e0d\u62a5\u9519 for key, value := range m { fmt.Println(key, value) } \u904d\u5386 map \u4e2d\u7684\u5185\u5bb9 Channel ch = make(chan int) \u521b\u5efa\u65e0\u7f13\u51b2\u901a\u9053 ch = make(chan int, 0) \u521b\u5efa\u65e0\u7f13\u51b2\u901a\u9053 ch = make(chan int, 3) \u521b\u5efa\u5bb9\u91cf\u4e3a 3 \u7684\u7f13\u51b2\u901a\u9053 ch < - x \u53d1\u9001\u8bed\u53e5 x = < -ch \u63a5\u6536\u8bed\u53e5 close(ch) \u5173\u95ed\u901a\u9053 \u6d41\u7a0b\u63a7\u5236 switch num { case 1: fun1() case 2: fun2() default: fun3() } Switch","title":"Go"},{"location":"languages/go/#_1","text":"var msg string msg = \"Hello\" n \u53d8\u91cf\u58f0\u660e msg := \"Hello\" const Phi = 1.618 \u5e38\u91cf\u53ef\u4ee5\u662f character\uff0cstring\uff0cboolean \u6216\u6570\u503c\u3002","title":"\u53d8\u91cf\u548c\u5e38\u91cf"},{"location":"languages/go/#_2","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"languages/go/#_3","text":"for i := 0; i < len(str); i++ { fmt.Println(str[i]) } \u904d\u5386\u5b57\u7b26\u4e32\u7684 byte (uinit8) for _, s := range str { fmt.Println(s) } \u904d\u5386\u5b57\u7b26\u4e32\u7684 rune (int32)","title":"\u5b57\u7b26\u4e32"},{"location":"languages/go/#slice","text":"var s []type \u58f0\u660e\u4e00\u4e2a slice\uff0c\u4f46\u6ca1\u6709\u5206\u914d\u7a7a\u95f4\u3002\u6b64\u65f6 s \u7b49\u4e8e nil s := make([]type, length) \u4f7f\u7528 make() \u521b\u5efa slice\uff0c\u6307\u5b9a\u4e86 slice \u7684 length\uff08capacity \u4e3a\u53ef\u9009\u53c2\u6570\uff09 s := make([]type, length, capacity) s := []int{1, 2, 3} \u58f0\u660e\u4e00\u4e2a slice \u5e76\u521d\u59cb\u5316 s := arr[:] \u4ece\u6570\u7ec4 arr \u521d\u59cb\u5316 slice s := arr[2:4] s2 := s[2:4] \u4ece slice s \u521d\u59cb\u5316 slice s = append(s, 1) \u5411 slice s \u8ffd\u52a0\u4e00\u4e2a\u5143\u7d20 s = append(s, 1, 2) \u5411 slice s \u8ffd\u52a0\u4e24\u4e2a\u5143\u7d20 s = append(s, []int{1, 2, 3}...) \u8ffd\u52a0\u4e00\u4e2a slice\uff0cslice \u9700\u8981\u4f7f\u7528...\u8fd0\u7b97\u7b26 s = append([]int{1, 2, 3}, s...) \u5411 slice \u524d\u9762\u8ffd\u52a0\u5143\u7d20 for _, item := range s { fmt.Println(item) } \u904d\u5386 slice","title":"Slice"},{"location":"languages/go/#map","text":"var m map[key_type]value_type \u58f0\u660e\u4e00\u4e2a map\uff0c\u4f46\u6ca1\u6709\u5206\u914d\u7a7a\u95f4\u3002\u6b64\u65f6 m \u7b49\u4e8e nil m := make(map[key_type]value_type) \u4f7f\u7528 make() \u521b\u5efa map m := map[string]int { \"item1\": 1, \"item2\": 2, } \u58f0\u660e\u4e00\u4e2amap\u5e76\u521d\u59cb\u5316 _, ok := m[\"key\"] \u5224\u65ad map \u4e2d key \u662f\u5426\u5b58\u5728\uff0cok \u4e3a true \u5219 key \u5b58\u5728\uff0c\u4e3a false \u5219 key \u4e0d\u5b58\u5728 delete(m, \"key\") \u5220\u9664 map \u4e2d\u7684\u5143\u7d20\u3002\u5982\u679c key \u4e0d\u5b58\u5728\uff0c\u4e0d\u64cd\u4f5c\u4e5f\u4e0d\u62a5\u9519 for key, value := range m { fmt.Println(key, value) } \u904d\u5386 map \u4e2d\u7684\u5185\u5bb9","title":"Map"},{"location":"languages/go/#channel","text":"ch = make(chan int) \u521b\u5efa\u65e0\u7f13\u51b2\u901a\u9053 ch = make(chan int, 0) \u521b\u5efa\u65e0\u7f13\u51b2\u901a\u9053 ch = make(chan int, 3) \u521b\u5efa\u5bb9\u91cf\u4e3a 3 \u7684\u7f13\u51b2\u901a\u9053 ch < - x \u53d1\u9001\u8bed\u53e5 x = < -ch \u63a5\u6536\u8bed\u53e5 close(ch) \u5173\u95ed\u901a\u9053","title":"Channel"},{"location":"languages/go/#_4","text":"switch num { case 1: fun1() case 2: fun2() default: fun3() } Switch","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"languages/python/","text":"import datetime time.strftime('%Y-%m-%d %H:%M:%S', time.localtime()) \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u5b57\u7b26\u4e32 import time int(time.time()) \u83b7\u53d6\u5341\u8fdb\u5236\u65f6\u95f4\u6233","title":"Python"},{"location":"tools/git/","text":"\u6bd4\u8f83 git difftool --extcmd vimdiff filename \u6307\u5b9a\u4f7f\u7528 vimdiff \u67e5\u770b\u6587\u4ef6\u6539\u52a8 Stash git stash list \u663e\u793a\u9690\u85cf\u7684\u5de5\u4f5c\u73b0\u573a git stash \u9690\u85cf\u5f53\u524d\u5de5\u4f5c\u73b0\u573a git stash push FILENAME \u9690\u85cf\u6307\u5b9a\u6587\u4ef6 git stash pop \u6062\u590d\u9690\u85cf\u7684\u5de5\u4f5c\u73b0\u573a Log git log \u663e\u793a\u63d0\u4ea4\u65e5\u5fd7 git log --pretty=oneline \u4ee5\u6bcf\u6b21\u4e00\u884c\u663e\u793a\u63d0\u4ea4\u65e5\u5fd7 \u8fdc\u7a0b\u4ed3\u5e93 git fetch origin pull/PRID/head:\u672c\u5730\u5206\u652f \u62c9\u53d6 pr","title":"Git"},{"location":"tools/git/#_1","text":"git difftool --extcmd vimdiff filename \u6307\u5b9a\u4f7f\u7528 vimdiff \u67e5\u770b\u6587\u4ef6\u6539\u52a8","title":"\u6bd4\u8f83"},{"location":"tools/git/#stash","text":"git stash list \u663e\u793a\u9690\u85cf\u7684\u5de5\u4f5c\u73b0\u573a git stash \u9690\u85cf\u5f53\u524d\u5de5\u4f5c\u73b0\u573a git stash push FILENAME \u9690\u85cf\u6307\u5b9a\u6587\u4ef6 git stash pop \u6062\u590d\u9690\u85cf\u7684\u5de5\u4f5c\u73b0\u573a","title":"Stash"},{"location":"tools/git/#log","text":"git log \u663e\u793a\u63d0\u4ea4\u65e5\u5fd7 git log --pretty=oneline \u4ee5\u6bcf\u6b21\u4e00\u884c\u663e\u793a\u63d0\u4ea4\u65e5\u5fd7","title":"Log"},{"location":"tools/git/#_2","text":"git fetch origin pull/PRID/head:\u672c\u5730\u5206\u652f \u62c9\u53d6 pr","title":"\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"tools/kafka/","text":"bin/kafka-topics.sh --create \\ --bootstrap-server 127.0.0.1:9092 \\ --replication-factor 1 --partitions 1 --topic test \u521b\u5efa topic test bin/kafka-topics.sh --list \\ --bootstrap-server 127.0.0.1:9092 \u5217\u51fa\u5df2\u521b\u5efa\u7684 topic bin/kafka-console-producer.sh \\ --bootstrap-server 127.0.0.1:9092 \\ --topic test \u5411 topic \u53d1\u9001\u4fe1\u606f bin/kafka-console-consumer.sh \\ --bootstrap-server 127.0.0.1:9092 \\ --topic test --from-beginning \u542f\u52a8\u6d88\u8d39\u8005\u63a5\u6536 topic \u6d88\u606f","title":"Kafka"},{"location":"tools/tmux/","text":"\u4f1a\u8bdd {PREFIX} s \u4ece\u5217\u8868\u4e2d\u9009\u62e9\u4f1a\u8bdd {PREFIX} $ \u91cd\u547d\u540d\u5f53\u524d\u4f1a\u8bdd \u7a97\u53e3 {PREFIX} w \u4ece\u5217\u8868\u4e2d\u9009\u62e9\u7a97\u53e3 {PREFIX} c \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3 {PREFIX} , \u91cd\u547d\u540d\u5f53\u524d\u7a97\u53e3 {PREFIX} p \u9009\u62e9\u4e0a\u4e00\u4e2a\u7a97\u53e3 {PREFIX} n \u9009\u62e9\u4e0b\u4e00\u4e2a\u7a97\u53e3 {PREFIX} :swap-window -t 0 \u5c06\u5f53\u524d\u7a97\u53e3\u548c\u7a97\u53e3 0 \u4ea4\u6362 \u9762\u677f {PREFIX} x \u5173\u95ed\u5f53\u524d\u9762\u677f \u5176\u4ed6 {PREFIX} t \u663e\u793a\u65f6\u949f {PREFIX} ? \u5217\u51fa\u5feb\u6377\u952e\u7ed1\u5b9a","title":"Tmux"},{"location":"tools/tmux/#_1","text":"{PREFIX} s \u4ece\u5217\u8868\u4e2d\u9009\u62e9\u4f1a\u8bdd {PREFIX} $ \u91cd\u547d\u540d\u5f53\u524d\u4f1a\u8bdd","title":"\u4f1a\u8bdd"},{"location":"tools/tmux/#_2","text":"{PREFIX} w \u4ece\u5217\u8868\u4e2d\u9009\u62e9\u7a97\u53e3 {PREFIX} c \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a97\u53e3 {PREFIX} , \u91cd\u547d\u540d\u5f53\u524d\u7a97\u53e3 {PREFIX} p \u9009\u62e9\u4e0a\u4e00\u4e2a\u7a97\u53e3 {PREFIX} n \u9009\u62e9\u4e0b\u4e00\u4e2a\u7a97\u53e3 {PREFIX} :swap-window -t 0 \u5c06\u5f53\u524d\u7a97\u53e3\u548c\u7a97\u53e3 0 \u4ea4\u6362","title":"\u7a97\u53e3"},{"location":"tools/tmux/#_3","text":"{PREFIX} x \u5173\u95ed\u5f53\u524d\u9762\u677f","title":"\u9762\u677f"},{"location":"tools/tmux/#_4","text":"{PREFIX} t \u663e\u793a\u65f6\u949f {PREFIX} ? \u5217\u51fa\u5feb\u6377\u952e\u7ed1\u5b9a","title":"\u5176\u4ed6"}]}